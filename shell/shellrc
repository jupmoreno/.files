[ -f ~/.shellrc_local ] && source ~/.shellrc_local

[ -d $HOME/Projects ] && export projects="$HOME/Projects"

[ -f /usr/local/etc/profile.d/autojump.sh ] && . /usr/local/etc/profile.d/autojump.sh

export PATH="/usr/local/opt/curl/bin:$PATH"
export PATH="/usr/local/opt/ruby/bin:$PATH"
export PATH="/usr/local/opt/whois/bin:$PATH"
export PATH="/usr/local/opt/swift/bin:$PATH"
export PATH="$HOME/.bin:$PATH"
export PATH="$HOME/.docker/bin:$PATH"

eval $(thefuck --alias)

export PATH="$HOME/.jenv/bin:$PATH"
eval "$(jenv init -)"
#for D in /Library/Java/JavaVirtualMachines/*/; do jenv add ${D}Contents/Home/; done
#jenv global 1.8

export EDITOR="code -w"

export STARSHIP_CONFIG=~/.config/starship/config.toml
export ATUIN_CONFIG_DIR=~/.config/atuin

export FZF_DEFAULT_OPTS="--height 40% --no-info"

alias awslocal="aws --profile localstack --endpoint-url=http://localhost/localstack"

# From: https://github.com/ahmetb/kubectl-aliases
[ -f ~/.kubectl_aliases ] && source ~/.kubectl_aliases
function kubectl() { echo "+ kubectl $@">&2; command kubectl $@; }
# From: https://gist.github.com/so0k/42313dbb3b547a0f51a547bb968696ba
function kjq() {
  OUTPUT=$(kubectl -o json $@);
  FILTER=$(printf '%s' "$OUTPUT" | jid -q);
  if [ -n "${FILTER}" ]; then
    echo "+ kubectl -o json $@ | jq -r '$FILTER'";
    printf '%s' "$OUTPUT" | jq -r "$FILTER";
  fi
}

# atuin-setup() {
#   if ! which atuin &> /dev/null; then return 1; fi
#   bindkey '^E' _atuin_search_widget

#   export ATUIN_NOBIND="true"
#   fzf-atuin-history-widget() {
#       local selected num
#       setopt localoptions noglobsubst noposixbuiltins pipefail no_aliases 2>/dev/null

#       # local atuin_opts="--cmd-only --limit ${ATUIN_LIMIT:-5000}"
#       local atuin_opts="--cmd-only"
#       local fzf_opts=(
#           --height=${FZF_TMUX_HEIGHT:-80%}
#           --tac
#           "-n2..,.."
#           --tiebreak=index
#           "--query=${LBUFFER}"
#           "+m"
#           "--bind=ctrl-d:reload(atuin search $atuin_opts -c $PWD),ctrl-r:reload(atuin search $atuin_opts)"
#       )

#       selected=$(
#           eval "atuin search ${atuin_opts}" |
#               fzf "${fzf_opts[@]}"
#       )
#       local ret=$?
#       if [ -n "$selected" ]; then
#           # the += lets it insert at current pos instead of replacing
#           LBUFFER+="${selected}"
#       fi
#       zle reset-prompt
#       return $ret
#   }
#   zle -N fzf-atuin-history-widget
#   bindkey '^R' fzf-atuin-history-widget
# }

# atuin-setup
